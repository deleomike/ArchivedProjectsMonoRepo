

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 23 12:00:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1709
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1709 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011C                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0293                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029A                     	;# 
   175  029E                     	;# 
   176  030C                     	;# 
   177  030D                     	;# 
   178  030E                     	;# 
   179  038C                     	;# 
   180  038D                     	;# 
   181  038E                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0397                     	;# 
   189  0398                     	;# 
   190  0399                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0511                     	;# 
   198  0515                     	;# 
   199  0617                     	;# 
   200  0618                     	;# 
   201  0619                     	;# 
   202  0619                     	;# 
   203  061A                     	;# 
   204  061B                     	;# 
   205  061C                     	;# 
   206  061C                     	;# 
   207  0691                     	;# 
   208  0692                     	;# 
   209  0693                     	;# 
   210  0694                     	;# 
   211  0695                     	;# 
   212  0696                     	;# 
   213  0697                     	;# 
   214  0698                     	;# 
   215  0699                     	;# 
   216  069A                     	;# 
   217  069B                     	;# 
   218  069C                     	;# 
   219  069D                     	;# 
   220  069E                     	;# 
   221  069F                     	;# 
   222  0E0F                     	;# 
   223  0E10                     	;# 
   224  0E11                     	;# 
   225  0E12                     	;# 
   226  0E13                     	;# 
   227  0E14                     	;# 
   228  0E15                     	;# 
   229  0E17                     	;# 
   230  0E20                     	;# 
   231  0E21                     	;# 
   232  0E22                     	;# 
   233  0E24                     	;# 
   234  0E25                     	;# 
   235  0E28                     	;# 
   236  0E29                     	;# 
   237  0E2A                     	;# 
   238  0E2B                     	;# 
   239  0E90                     	;# 
   240  0E91                     	;# 
   241  0E92                     	;# 
   242  0E94                     	;# 
   243  0E95                     	;# 
   244  0E9C                     	;# 
   245  0E9D                     	;# 
   246  0E9E                     	;# 
   247  0E9F                     	;# 
   248  0EA0                     	;# 
   249  0EA1                     	;# 
   250  0EA2                     	;# 
   251  0EA3                     	;# 
   252  0EA4                     	;# 
   253  0EA5                     	;# 
   254  0EA6                     	;# 
   255  0EA7                     	;# 
   256  0F0F                     	;# 
   257  0F10                     	;# 
   258  0F11                     	;# 
   259  0F12                     	;# 
   260  0F13                     	;# 
   261  0F14                     	;# 
   262  0F15                     	;# 
   263  0F16                     	;# 
   264  0F17                     	;# 
   265  0F18                     	;# 
   266  0F19                     	;# 
   267  0F1A                     	;# 
   268  0F1B                     	;# 
   269  0F1C                     	;# 
   270  0F1D                     	;# 
   271  0F1E                     	;# 
   272  0F1F                     	;# 
   273  0F20                     	;# 
   274  0F21                     	;# 
   275  0F22                     	;# 
   276  0F23                     	;# 
   277  0F24                     	;# 
   278  0F25                     	;# 
   279  0F26                     	;# 
   280  0F27                     	;# 
   281  0F28                     	;# 
   282  0F29                     	;# 
   283  0F2A                     	;# 
   284  0F2B                     	;# 
   285  0F2C                     	;# 
   286  0F2D                     	;# 
   287  0F9E                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299                           
   300                           	psect	stringtext1
   301  0800                     __pstringtext1:	
   302  0800                     _dies:	
   303  0800  3400               	retlw	0
   304  0801  3400               	retlw	0
   305  0802  3400               	retlw	0
   306  0803  3401               	retlw	1
   307  0804  3400               	retlw	0
   308  0805  3400               	retlw	0
   309  0806  3400               	retlw	0
   310  0807  3401               	retlw	1
   311  0808  3400               	retlw	0
   312  0809  3400               	retlw	0
   313  080A  3400               	retlw	0
   314  080B  3400               	retlw	0
   315  080C  3400               	retlw	0
   316  080D  3401               	retlw	1
   317  080E  3400               	retlw	0
   318  080F  3400               	retlw	0
   319  0810  3401               	retlw	1
   320  0811  3401               	retlw	1
   321  0812  3401               	retlw	1
   322  0813  3400               	retlw	0
   323  0814  3400               	retlw	0
   324  0815  3401               	retlw	1
   325  0816  3400               	retlw	0
   326  0817  3401               	retlw	1
   327  0818  3400               	retlw	0
   328  0819  3401               	retlw	1
   329  081A  3400               	retlw	0
   330  081B  3401               	retlw	1
   331  081C  3401               	retlw	1
   332  081D  3400               	retlw	0
   333  081E  3401               	retlw	1
   334  081F  3401               	retlw	1
   335  0820  3401               	retlw	1
   336  0821  3400               	retlw	0
   337  0822  3401               	retlw	1
   338  0823  3401               	retlw	1
   339  0824  3401               	retlw	1
   340  0825  3401               	retlw	1
   341  0826  3400               	retlw	0
   342  0827  3401               	retlw	1
   343  0828  3401               	retlw	1
   344  0829  3401               	retlw	1
   345  082A                     __end_of_dies:	
   346  000E                     _PORTCbits	set	14
   347  000C                     _PORTAbits	set	12
   348  008E                     _TRISC	set	142
   349  008D                     _TRISB	set	141
   350  008C                     _TRISA	set	140
   351  0099                     _OSCCONbits	set	153
   352  018E                     _ANSELC	set	398
   353  018D                     _ANSELB	set	397
   354  018C                     _ANSELA	set	396
   355  030E                     _SLRCONC	set	782
   356  030D                     _SLRCONB	set	781
   357  030C                     _SLRCONA	set	780
   358                           
   359                           ; #config settings
   360  0000                     
   361                           	psect	cinit
   362  07FD                     start_initialization:	
   363  07FD                     __initialization:	
   364  07FD                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  07FD                     __end_of__initialization:	
   368  07FD  0020               	movlb	0
   369  07FE  3186  2EE5         	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	cstackCOMMON
   372  0070                     __pcstackCOMMON:	
   373  0070                     ?_initialize:	
   374  0070                     ??_initialize:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_reset:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_reset:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_set:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_main:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?___wmul:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ___wmul@multiplier:	
   393                           ; 2 bytes @ 0x0
   394                           
   395                           
   396                           ; 2 bytes @ 0x0
   397  0070                     	ds	2
   398  0072                     ___wmul@multiplicand:	
   399                           
   400                           ; 2 bytes @ 0x2
   401  0072                     	ds	2
   402  0074                     ??___wmul:	
   403  0074                     ___wmul@product:	
   404                           ; 1 bytes @ 0x4
   405                           
   406                           
   407                           ; 2 bytes @ 0x4
   408  0074                     	ds	2
   409  0076                     ??_set:	
   410                           
   411                           ; 1 bytes @ 0x6
   412  0076                     	ds	3
   413  0079                     set@dieValue:	
   414                           
   415                           ; 1 bytes @ 0x9
   416  0079                     	ds	1
   417  007A                     ??_main:	
   418                           
   419                           ; 1 bytes @ 0xA
   420  007A                     	ds	1
   421  007B                     main@dieValue:	
   422                           
   423                           ; 1 bytes @ 0xB
   424  007B                     	ds	1
   425                           
   426                           	psect	maintext
   427  06E5                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 22 in file "lab01.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  dieValue        1   11[COMMON] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B1F/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels required when called:    2
   453 ;; This function calls:
   454 ;;		_initialize
   455 ;;		_reset
   456 ;;		_set
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _main
   464  06E5                     _main:	
   465                           
   466                           ;lab01.c: 24: uint8_t dieValue = 1;
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   470  06E5  01FB               	clrf	main@dieValue
   471  06E6  0AFB               	incf	main@dieValue,f
   472                           
   473                           ;lab01.c: 26: initialize();
   474  06E7  3186  26B0  3186   	fcall	_initialize
   475  06EA  2EFF               	goto	l516
   476  06EB                     l518:	
   477                           
   478                           ;lab01.c: 33: if (PORTAbits.RA4 == 1){
   479  06EB  1E0C               	btfss	12,4	;volatile
   480  06EC  2EFB               	goto	l528
   481                           
   482                           ;lab01.c: 34: dieValue++;
   483  06ED  3001               	movlw	1
   484  06EE  00FA               	movwf	??_main
   485  06EF  087A               	movf	??_main,w
   486  06F0  07FB               	addwf	main@dieValue,f
   487                           
   488                           ;lab01.c: 35: reset();
   489  06F1  3186  26A7  3186   	fcall	_reset
   490                           
   491                           ;lab01.c: 36: if (dieValue == 7)
   492  06F4  3007               	movlw	7
   493  06F5  067B               	xorwf	main@dieValue,w
   494  06F6  1D03               	btfss	3,2
   495  06F7  2EFF               	goto	l516
   496                           
   497                           ;lab01.c: 37: {dieValue = 1;}
   498  06F8  01FB               	clrf	main@dieValue
   499  06F9  0AFB               	incf	main@dieValue,f
   500                           
   501                           ;lab01.c: 38: }
   502  06FA  2EFF               	goto	l516
   503  06FB                     l528:	
   504                           
   505                           ;lab01.c: 39: else{
   506                           ;lab01.c: 40: set(dieValue);
   507  06FB  087B               	movf	main@dieValue,w
   508  06FC  3187  2706  3186   	fcall	_set
   509  06FF                     l516:	
   510                           ;lab01.c: 28: while(1) {
   511                           
   512                           ;lab01.c: 41: }
   513                           ;lab01.c: 43: } else {
   514                           
   515                           
   516                           ;lab01.c: 31: if (PORTAbits.RA5 == 1) {
   517  06FF  0020               	movlb	0	; select bank0
   518  0700  1A8C               	btfsc	12,5	;volatile
   519  0701  2EEB               	goto	l518
   520                           
   521                           ;lab01.c: 45: reset();
   522  0702  3186  26A7  3186   	fcall	_reset
   523  0705  2EFF               	goto	l516
   524  0706                     __end_of_main:	
   525                           
   526                           	psect	text1
   527  0706                     __ptext1:	
   528 ;; *************** function _set *****************
   529 ;; Defined at:
   530 ;;		line 128 in file "lab01.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  dieValue        1    wreg     const unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  dieValue        1    9[COMMON] const unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   548 ;;Total ram usage:        4 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		___wmul
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _set
   560  0706                     _set:	
   561                           
   562                           ;incstack = 0
   563                           ; Regs used in _set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           ;set@dieValue stored from wreg
   565  0706  00F9               	movwf	set@dieValue
   566                           
   567                           ;lab01.c: 131: PORTCbits.RC0 = dies[dieValue-1][0];
   568  0707  0879               	movf	set@dieValue,w
   569  0708  3EFF               	addlw	255
   570  0709  00F0               	movwf	___wmul@multiplier
   571  070A  30FF               	movlw	255
   572  070B  1803               	skipnc
   573  070C  3000               	movlw	0
   574  070D  00F1               	movwf	___wmul@multiplier+1
   575  070E  3007               	movlw	7
   576  070F  00F2               	movwf	___wmul@multiplicand
   577  0710  3000               	movlw	0
   578  0711  00F3               	movwf	___wmul@multiplicand+1
   579  0712  3186  26CA  3187   	fcall	___wmul
   580  0715  0871               	movf	?___wmul+1,w
   581  0716  0085               	movwf	5
   582  0717  0870               	movf	?___wmul,w
   583  0718  0084               	movwf	4
   584  0719  3000               	movlw	low (_dies| (0+32768))
   585  071A  0784               	addwf	4,f
   586  071B  3088               	movlw	high (_dies| (0+32768))
   587  071C  3D85               	addwfc	5,f
   588  071D  0800               	movf	0,w	;code access
   589  071E  00F6               	movwf	??_set
   590  071F  0020               	movlb	0	; select bank0
   591  0720  080E               	movf	14,w	;volatile
   592  0721  0676               	xorwf	??_set,w
   593  0722  39FE               	andlw	-2
   594  0723  0676               	xorwf	??_set,w
   595  0724  008E               	movwf	14	;volatile
   596                           
   597                           ;lab01.c: 132: PORTCbits.RC1 = dies[dieValue-1][1];
   598  0725  0879               	movf	set@dieValue,w
   599  0726  3EFF               	addlw	255
   600  0727  00F0               	movwf	___wmul@multiplier
   601  0728  30FF               	movlw	255
   602  0729  1803               	skipnc
   603  072A  3000               	movlw	0
   604  072B  00F1               	movwf	___wmul@multiplier+1
   605  072C  3007               	movlw	7
   606  072D  00F2               	movwf	___wmul@multiplicand
   607  072E  3000               	movlw	0
   608  072F  00F3               	movwf	___wmul@multiplicand+1
   609  0730  3186  26CA  3187   	fcall	___wmul
   610  0733  0870               	movf	?___wmul,w
   611  0734  3E01               	addlw	1
   612  0735  00F6               	movwf	??_set
   613  0736  3000               	movlw	0
   614  0737  3D71               	addwfc	?___wmul+1,w
   615  0738  00F7               	movwf	??_set+1
   616  0739  3000               	movlw	low (_dies| (0+32768))
   617  073A  0776               	addwf	??_set,w
   618  073B  0084               	movwf	4
   619  073C  3088               	movlw	high (_dies| (0+32768))
   620  073D  3D77               	addwfc	??_set+1,w
   621  073E  0085               	movwf	5
   622  073F  0800               	movf	0,w	;code access
   623  0740  00F8               	movwf	??_set+2
   624  0741  0DF8               	rlf	??_set+2,f
   625  0742  0020               	movlb	0	; select bank0
   626  0743  080E               	movf	14,w	;volatile
   627  0744  0678               	xorwf	??_set+2,w
   628  0745  39FD               	andlw	-3
   629  0746  0678               	xorwf	??_set+2,w
   630  0747  008E               	movwf	14	;volatile
   631                           
   632                           ;lab01.c: 133: PORTCbits.RC2 = dies[dieValue-1][2];
   633  0748  0879               	movf	set@dieValue,w
   634  0749  3EFF               	addlw	255
   635  074A  00F0               	movwf	___wmul@multiplier
   636  074B  30FF               	movlw	255
   637  074C  1803               	skipnc
   638  074D  3000               	movlw	0
   639  074E  00F1               	movwf	___wmul@multiplier+1
   640  074F  3007               	movlw	7
   641  0750  00F2               	movwf	___wmul@multiplicand
   642  0751  3000               	movlw	0
   643  0752  00F3               	movwf	___wmul@multiplicand+1
   644  0753  3186  26CA  3187   	fcall	___wmul
   645  0756  0870               	movf	?___wmul,w
   646  0757  3E02               	addlw	2
   647  0758  00F6               	movwf	??_set
   648  0759  3000               	movlw	0
   649  075A  3D71               	addwfc	?___wmul+1,w
   650  075B  00F7               	movwf	??_set+1
   651  075C  3000               	movlw	low (_dies| (0+32768))
   652  075D  0776               	addwf	??_set,w
   653  075E  0084               	movwf	4
   654  075F  3088               	movlw	high (_dies| (0+32768))
   655  0760  3D77               	addwfc	??_set+1,w
   656  0761  0085               	movwf	5
   657  0762  0800               	movf	0,w	;code access
   658  0763  00F8               	movwf	??_set+2
   659  0764  0DF8               	rlf	??_set+2,f
   660  0765  0DF8               	rlf	??_set+2,f
   661  0766  0020               	movlb	0	; select bank0
   662  0767  080E               	movf	14,w	;volatile
   663  0768  0678               	xorwf	??_set+2,w
   664  0769  39FB               	andlw	-5
   665  076A  0678               	xorwf	??_set+2,w
   666  076B  008E               	movwf	14	;volatile
   667                           
   668                           ;lab01.c: 134: PORTCbits.RC3 = dies[dieValue-1][3];
   669  076C  0879               	movf	set@dieValue,w
   670  076D  3EFF               	addlw	255
   671  076E  00F0               	movwf	___wmul@multiplier
   672  076F  30FF               	movlw	255
   673  0770  1803               	skipnc
   674  0771  3000               	movlw	0
   675  0772  00F1               	movwf	___wmul@multiplier+1
   676  0773  3007               	movlw	7
   677  0774  00F2               	movwf	___wmul@multiplicand
   678  0775  3000               	movlw	0
   679  0776  00F3               	movwf	___wmul@multiplicand+1
   680  0777  3186  26CA  3187   	fcall	___wmul
   681  077A  0870               	movf	?___wmul,w
   682  077B  3E03               	addlw	3
   683  077C  00F6               	movwf	??_set
   684  077D  3000               	movlw	0
   685  077E  3D71               	addwfc	?___wmul+1,w
   686  077F  00F7               	movwf	??_set+1
   687  0780  3000               	movlw	low (_dies| (0+32768))
   688  0781  0776               	addwf	??_set,w
   689  0782  0084               	movwf	4
   690  0783  3088               	movlw	high (_dies| (0+32768))
   691  0784  3D77               	addwfc	??_set+1,w
   692  0785  0085               	movwf	5
   693  0786  0800               	movf	0,w	;code access
   694  0787  00F8               	movwf	??_set+2
   695  0788  0DF8               	rlf	??_set+2,f
   696  0789  0DF8               	rlf	??_set+2,f
   697  078A  0DF8               	rlf	??_set+2,f
   698  078B  0020               	movlb	0	; select bank0
   699  078C  080E               	movf	14,w	;volatile
   700  078D  0678               	xorwf	??_set+2,w
   701  078E  39F7               	andlw	-9
   702  078F  0678               	xorwf	??_set+2,w
   703  0790  008E               	movwf	14	;volatile
   704                           
   705                           ;lab01.c: 135: PORTCbits.RC4 = dies[dieValue-1][4];
   706  0791  0879               	movf	set@dieValue,w
   707  0792  3EFF               	addlw	255
   708  0793  00F0               	movwf	___wmul@multiplier
   709  0794  30FF               	movlw	255
   710  0795  1803               	skipnc
   711  0796  3000               	movlw	0
   712  0797  00F1               	movwf	___wmul@multiplier+1
   713  0798  3007               	movlw	7
   714  0799  00F2               	movwf	___wmul@multiplicand
   715  079A  3000               	movlw	0
   716  079B  00F3               	movwf	___wmul@multiplicand+1
   717  079C  3186  26CA  3187   	fcall	___wmul
   718  079F  0870               	movf	?___wmul,w
   719  07A0  3E04               	addlw	4
   720  07A1  00F6               	movwf	??_set
   721  07A2  3000               	movlw	0
   722  07A3  3D71               	addwfc	?___wmul+1,w
   723  07A4  00F7               	movwf	??_set+1
   724  07A5  3000               	movlw	low (_dies| (0+32768))
   725  07A6  0776               	addwf	??_set,w
   726  07A7  0084               	movwf	4
   727  07A8  3088               	movlw	high (_dies| (0+32768))
   728  07A9  3D77               	addwfc	??_set+1,w
   729  07AA  0085               	movwf	5
   730  07AB  0800               	movf	0,w	;code access
   731  07AC  00F8               	movwf	??_set+2
   732  07AD  0EF8               	swapf	??_set+2,f
   733  07AE  0020               	movlb	0	; select bank0
   734  07AF  080E               	movf	14,w	;volatile
   735  07B0  0678               	xorwf	??_set+2,w
   736  07B1  39EF               	andlw	-17
   737  07B2  0678               	xorwf	??_set+2,w
   738  07B3  008E               	movwf	14	;volatile
   739                           
   740                           ;lab01.c: 136: PORTCbits.RC5 = dies[dieValue-1][5];
   741  07B4  0879               	movf	set@dieValue,w
   742  07B5  3EFF               	addlw	255
   743  07B6  00F0               	movwf	___wmul@multiplier
   744  07B7  30FF               	movlw	255
   745  07B8  1803               	skipnc
   746  07B9  3000               	movlw	0
   747  07BA  00F1               	movwf	___wmul@multiplier+1
   748  07BB  3007               	movlw	7
   749  07BC  00F2               	movwf	___wmul@multiplicand
   750  07BD  3000               	movlw	0
   751  07BE  00F3               	movwf	___wmul@multiplicand+1
   752  07BF  3186  26CA  3187   	fcall	___wmul
   753  07C2  0870               	movf	?___wmul,w
   754  07C3  3E05               	addlw	5
   755  07C4  00F6               	movwf	??_set
   756  07C5  3000               	movlw	0
   757  07C6  3D71               	addwfc	?___wmul+1,w
   758  07C7  00F7               	movwf	??_set+1
   759  07C8  3000               	movlw	low (_dies| (0+32768))
   760  07C9  0776               	addwf	??_set,w
   761  07CA  0084               	movwf	4
   762  07CB  3088               	movlw	high (_dies| (0+32768))
   763  07CC  3D77               	addwfc	??_set+1,w
   764  07CD  0085               	movwf	5
   765  07CE  0800               	movf	0,w	;code access
   766  07CF  00F8               	movwf	??_set+2
   767  07D0  0EF8               	swapf	??_set+2,f
   768  07D1  0DF8               	rlf	??_set+2,f
   769  07D2  0020               	movlb	0	; select bank0
   770  07D3  080E               	movf	14,w	;volatile
   771  07D4  0678               	xorwf	??_set+2,w
   772  07D5  39DF               	andlw	-33
   773  07D6  0678               	xorwf	??_set+2,w
   774  07D7  008E               	movwf	14	;volatile
   775                           
   776                           ;lab01.c: 137: PORTCbits.RC6 = dies[dieValue-1][6];
   777  07D8  0879               	movf	set@dieValue,w
   778  07D9  3EFF               	addlw	255
   779  07DA  00F0               	movwf	___wmul@multiplier
   780  07DB  30FF               	movlw	255
   781  07DC  1803               	skipnc
   782  07DD  3000               	movlw	0
   783  07DE  00F1               	movwf	___wmul@multiplier+1
   784  07DF  3007               	movlw	7
   785  07E0  00F2               	movwf	___wmul@multiplicand
   786  07E1  3000               	movlw	0
   787  07E2  00F3               	movwf	___wmul@multiplicand+1
   788  07E3  3186  26CA         	fcall	___wmul
   789  07E5  0870               	movf	?___wmul,w
   790  07E6  3E06               	addlw	6
   791  07E7  00F6               	movwf	??_set
   792  07E8  3000               	movlw	0
   793  07E9  3D71               	addwfc	?___wmul+1,w
   794  07EA  00F7               	movwf	??_set+1
   795  07EB  3000               	movlw	low (_dies| (0+32768))
   796  07EC  0776               	addwf	??_set,w
   797  07ED  0084               	movwf	4
   798  07EE  3088               	movlw	high (_dies| (0+32768))
   799  07EF  3D77               	addwfc	??_set+1,w
   800  07F0  0085               	movwf	5
   801  07F1  0800               	movf	0,w	;code access
   802  07F2  00F8               	movwf	??_set+2
   803  07F3  0EF8               	swapf	??_set+2,f
   804  07F4  0DF8               	rlf	??_set+2,f
   805  07F5  0DF8               	rlf	??_set+2,f
   806  07F6  0020               	movlb	0	; select bank0
   807  07F7  080E               	movf	14,w	;volatile
   808  07F8  0678               	xorwf	??_set+2,w
   809  07F9  39BF               	andlw	-65
   810  07FA  0678               	xorwf	??_set+2,w
   811  07FB  008E               	movwf	14	;volatile
   812  07FC  0008               	return
   813  07FD                     __end_of_set:	
   814                           ;lab01.c: 138: return;
   815                           
   816                           
   817                           	psect	text2
   818  06CA                     __ptext2:	
   819 ;; *************** function ___wmul *****************
   820 ;; Defined at:
   821 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  multiplier      2    0[COMMON] unsigned int 
   824 ;;  multiplicand    2    2[COMMON] unsigned int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  product         2    4[COMMON] unsigned int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  2    0[COMMON] unsigned int 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;Total ram usage:        6 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_set
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function ___wmul
   851  06CA                     ___wmul:	
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   855  06CA  01F4               	clrf	___wmul@product
   856  06CB  01F5               	clrf	___wmul@product+1
   857  06CC                     l496:	
   858  06CC  1C70               	btfss	___wmul@multiplier,0
   859  06CD  2ED2               	goto	l58
   860  06CE  0872               	movf	___wmul@multiplicand,w
   861  06CF  07F4               	addwf	___wmul@product,f
   862  06D0  0873               	movf	___wmul@multiplicand+1,w
   863  06D1  3DF5               	addwfc	___wmul@product+1,f
   864  06D2                     l58:	
   865  06D2  3001               	movlw	1
   866  06D3                     u95:	
   867  06D3  35F2               	lslf	___wmul@multiplicand,f
   868  06D4  0DF3               	rlf	___wmul@multiplicand+1,f
   869  06D5  0B89               	decfsz	9,f
   870  06D6  2ED3               	goto	u95
   871  06D7  3001               	movlw	1
   872  06D8                     u105:	
   873  06D8  36F1               	lsrf	___wmul@multiplier+1,f
   874  06D9  0CF0               	rrf	___wmul@multiplier,f
   875  06DA  0B89               	decfsz	9,f
   876  06DB  2ED8               	goto	u105
   877  06DC  0870               	movf	___wmul@multiplier,w
   878  06DD  0471               	iorwf	___wmul@multiplier+1,w
   879  06DE  1D03               	btfss	3,2
   880  06DF  2ECC               	goto	l496
   881  06E0  0875               	movf	___wmul@product+1,w
   882  06E1  00F1               	movwf	?___wmul+1
   883  06E2  0874               	movf	___wmul@product,w
   884  06E3  00F0               	movwf	?___wmul
   885  06E4  0008               	return
   886  06E5                     __end_of___wmul:	
   887                           
   888                           	psect	text3
   889  06B0                     __ptext3:	
   890 ;; *************** function _initialize *****************
   891 ;; Defined at:
   892 ;;		line 62 in file "lab01.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		_reset
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _initialize
   922  06B0                     _initialize:	
   923                           
   924                           ;lab01.c: 65: OSCCONbits.IRCF = 14;
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
   928  06B0  0021               	movlb	1	; select bank1
   929  06B1  0819               	movf	25,w	;volatile
   930  06B2  3987               	andlw	-121
   931  06B3  3870               	iorlw	112
   932  06B4  0099               	movwf	25	;volatile
   933                           
   934                           ;lab01.c: 66: OSCCONbits.SPLLEN = 1;
   935  06B5  1799               	bsf	25,7	;volatile
   936                           
   937                           ;lab01.c: 67: OSCCONbits.SCS = 0;
   938  06B6  30FC               	movlw	-4
   939  06B7  0599               	andwf	25,f	;volatile
   940                           
   941                           ;lab01.c: 80: ANSELA = 0b00000000;
   942  06B8  0023               	movlb	3	; select bank3
   943  06B9  018C               	clrf	12	;volatile
   944                           
   945                           ;lab01.c: 81: ANSELB = 0b00000000;
   946  06BA  018D               	clrf	13	;volatile
   947                           
   948                           ;lab01.c: 82: ANSELC = 0b00000000;
   949  06BB  018E               	clrf	14	;volatile
   950                           
   951                           ;lab01.c: 83: SLRCONA = 0b00000000;
   952  06BC  0026               	movlb	6	; select bank6
   953  06BD  018C               	clrf	12	;volatile
   954                           
   955                           ;lab01.c: 84: SLRCONB = 0b00000000;
   956  06BE  018D               	clrf	13	;volatile
   957                           
   958                           ;lab01.c: 85: SLRCONC = 0b00000000;
   959  06BF  018E               	clrf	14	;volatile
   960                           
   961                           ;lab01.c: 86: TRISA = 0b11111111;
   962  06C0  30FF               	movlw	255
   963  06C1  0021               	movlb	1	; select bank1
   964  06C2  008C               	movwf	12	;volatile
   965                           
   966                           ;lab01.c: 87: TRISB = 0b11111111;
   967  06C3  30FF               	movlw	255
   968  06C4  008D               	movwf	13	;volatile
   969                           
   970                           ;lab01.c: 88: TRISC = 0b10000000;
   971  06C5  3080               	movlw	128
   972  06C6  008E               	movwf	14	;volatile
   973                           
   974                           ;lab01.c: 91: reset();
   975  06C7  3186  26A7         	fcall	_reset
   976  06C9  0008               	return
   977  06CA                     __end_of_initialize:	
   978                           
   979                           	psect	text4
   980  06A7                     __ptext4:	
   981 ;; *************** function _reset *****************
   982 ;; Defined at:
   983 ;;		line 101 in file "lab01.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		None
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;;		_initialize
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _reset
  1013  06A7                     _reset:	
  1014                           
  1015                           ;lab01.c: 103: PORTCbits.RC0 = 0;
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _reset: []
  1019  06A7  0020               	movlb	0	; select bank0
  1020  06A8  100E               	bcf	14,0	;volatile
  1021                           
  1022                           ;lab01.c: 104: PORTCbits.RC1 = 0;
  1023  06A9  108E               	bcf	14,1	;volatile
  1024                           
  1025                           ;lab01.c: 105: PORTCbits.RC2 = 0;
  1026  06AA  110E               	bcf	14,2	;volatile
  1027                           
  1028                           ;lab01.c: 106: PORTCbits.RC3 = 0;
  1029  06AB  118E               	bcf	14,3	;volatile
  1030                           
  1031                           ;lab01.c: 107: PORTCbits.RC4 = 0;
  1032  06AC  120E               	bcf	14,4	;volatile
  1033                           
  1034                           ;lab01.c: 108: PORTCbits.RC5 = 0;
  1035  06AD  128E               	bcf	14,5	;volatile
  1036                           
  1037                           ;lab01.c: 109: PORTCbits.RC6 = 0;
  1038  06AE  130E               	bcf	14,6	;volatile
  1039                           
  1040                           ;lab01.c: 110: return;
  1041  06AF  0008               	return
  1042  06B0                     __end_of_reset:	
  1043  007E                     btemp	set	126	;btemp
  1044  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    42
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set
    _set->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     895
                                             10 COMMON     2     2      0
                         _initialize
                              _reset
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  4     4      0     848
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _reset
   _reset
   _set
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 23 12:00:32 2018

            __CFG_CP$OFF 0000                       l58 06D2                       u95 06D3  
    ___wmul@multiplicand 0072              __CFG_LVP$ON 0000                      l516 06FF  
                    l518 06EB                      l528 06FB                      l496 06CC  
                    u105 06D8                      _set 0706             __CFG_BORV$LO 0000  
                    wreg 0009                     ?_set 0070             __CFG_WRT$OFF 0000  
                   _dies 0800                     _main 06E5                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 0002            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           main@dieValue 007B                    ??_set 0076                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E           __CFG_FCMEN$OFF 0000                    _reset 06A7  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_dies 082A             __end_of_main 0706  
         __CFG_LPBOR$OFF 0000                   ??_main 007A           __CFG_PLLEN$OFF 0000  
                 ?_reset 0070           __CFG_ZCDDIS$ON 0000                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E           __CFG_PWRTE$OFF 0000  
                 ___wmul 06CA           __CFG_STVREN$ON 0000  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_reset 06B0              set@dieValue 0079  
                ??_reset 0070               __pmaintext 06E5                  ?___wmul 0070  
        __CFG_PPS1WAY$ON 0000                  _SLRCONA 030C                  _SLRCONB 030D  
                _SLRCONC 030E          __size_of___wmul 001B               _initialize 06B0  
                __ptext1 0706                  __ptext2 06CA                  __ptext3 06B0  
                __ptext4 06A7             __size_of_set 00F7     end_of_initialization 07FD  
              _PORTAbits 000C                _PORTCbits 000E         __CFG_FOSC$INTOSC 0000  
         __end_of___wmul 06E5              ?_initialize 0070      start_initialization 07FD  
            __end_of_set 07FD                 ??___wmul 0074                ___latbits 0002  
    __size_of_initialize 001A           __size_of_reset 0009           ___wmul@product 0074  
      ___wmul@multiplier 0070             ??_initialize 0070            __size_of_main 0021  
     __end_of_initialize 06CA        __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099  
          __pstringtext1 0800  
