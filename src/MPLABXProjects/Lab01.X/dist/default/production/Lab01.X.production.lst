

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 23 11:53:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1709
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1709 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011C                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0293                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029A                     	;# 
   175  029E                     	;# 
   176  030C                     	;# 
   177  030D                     	;# 
   178  030E                     	;# 
   179  038C                     	;# 
   180  038D                     	;# 
   181  038E                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0397                     	;# 
   189  0398                     	;# 
   190  0399                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0511                     	;# 
   198  0515                     	;# 
   199  0617                     	;# 
   200  0618                     	;# 
   201  0619                     	;# 
   202  0619                     	;# 
   203  061A                     	;# 
   204  061B                     	;# 
   205  061C                     	;# 
   206  061C                     	;# 
   207  0691                     	;# 
   208  0692                     	;# 
   209  0693                     	;# 
   210  0694                     	;# 
   211  0695                     	;# 
   212  0696                     	;# 
   213  0697                     	;# 
   214  0698                     	;# 
   215  0699                     	;# 
   216  069A                     	;# 
   217  069B                     	;# 
   218  069C                     	;# 
   219  069D                     	;# 
   220  069E                     	;# 
   221  069F                     	;# 
   222  0E0F                     	;# 
   223  0E10                     	;# 
   224  0E11                     	;# 
   225  0E12                     	;# 
   226  0E13                     	;# 
   227  0E14                     	;# 
   228  0E15                     	;# 
   229  0E17                     	;# 
   230  0E20                     	;# 
   231  0E21                     	;# 
   232  0E22                     	;# 
   233  0E24                     	;# 
   234  0E25                     	;# 
   235  0E28                     	;# 
   236  0E29                     	;# 
   237  0E2A                     	;# 
   238  0E2B                     	;# 
   239  0E90                     	;# 
   240  0E91                     	;# 
   241  0E92                     	;# 
   242  0E94                     	;# 
   243  0E95                     	;# 
   244  0E9C                     	;# 
   245  0E9D                     	;# 
   246  0E9E                     	;# 
   247  0E9F                     	;# 
   248  0EA0                     	;# 
   249  0EA1                     	;# 
   250  0EA2                     	;# 
   251  0EA3                     	;# 
   252  0EA4                     	;# 
   253  0EA5                     	;# 
   254  0EA6                     	;# 
   255  0EA7                     	;# 
   256  0F0F                     	;# 
   257  0F10                     	;# 
   258  0F11                     	;# 
   259  0F12                     	;# 
   260  0F13                     	;# 
   261  0F14                     	;# 
   262  0F15                     	;# 
   263  0F16                     	;# 
   264  0F17                     	;# 
   265  0F18                     	;# 
   266  0F19                     	;# 
   267  0F1A                     	;# 
   268  0F1B                     	;# 
   269  0F1C                     	;# 
   270  0F1D                     	;# 
   271  0F1E                     	;# 
   272  0F1F                     	;# 
   273  0F20                     	;# 
   274  0F21                     	;# 
   275  0F22                     	;# 
   276  0F23                     	;# 
   277  0F24                     	;# 
   278  0F25                     	;# 
   279  0F26                     	;# 
   280  0F27                     	;# 
   281  0F28                     	;# 
   282  0F29                     	;# 
   283  0F2A                     	;# 
   284  0F2B                     	;# 
   285  0F2C                     	;# 
   286  0F2D                     	;# 
   287  0F9E                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299                           
   300                           	psect	stringtext1
   301  0800                     __pstringtext1:	
   302  0800                     _dies:	
   303  0800  3400               	retlw	0
   304  0801  3400               	retlw	0
   305  0802  3400               	retlw	0
   306  0803  3401               	retlw	1
   307  0804  3400               	retlw	0
   308  0805  3400               	retlw	0
   309  0806  3400               	retlw	0
   310  0807  3401               	retlw	1
   311  0808  3400               	retlw	0
   312  0809  3400               	retlw	0
   313  080A  3400               	retlw	0
   314  080B  3400               	retlw	0
   315  080C  3400               	retlw	0
   316  080D  3401               	retlw	1
   317  080E  3400               	retlw	0
   318  080F  3400               	retlw	0
   319  0810  3401               	retlw	1
   320  0811  3401               	retlw	1
   321  0812  3401               	retlw	1
   322  0813  3400               	retlw	0
   323  0814  3400               	retlw	0
   324  0815  3401               	retlw	1
   325  0816  3400               	retlw	0
   326  0817  3401               	retlw	1
   327  0818  3400               	retlw	0
   328  0819  3401               	retlw	1
   329  081A  3400               	retlw	0
   330  081B  3401               	retlw	1
   331  081C  3401               	retlw	1
   332  081D  3400               	retlw	0
   333  081E  3401               	retlw	1
   334  081F  3401               	retlw	1
   335  0820  3401               	retlw	1
   336  0821  3400               	retlw	0
   337  0822  3401               	retlw	1
   338  0823  3401               	retlw	1
   339  0824  3401               	retlw	1
   340  0825  3401               	retlw	1
   341  0826  3400               	retlw	0
   342  0827  3401               	retlw	1
   343  0828  3401               	retlw	1
   344  0829  3401               	retlw	1
   345  082A                     __end_of_dies:	
   346  000E                     _PORTCbits	set	14
   347  000C                     _PORTAbits	set	12
   348  008E                     _TRISC	set	142
   349  008D                     _TRISB	set	141
   350  008C                     _TRISA	set	140
   351  018E                     _ANSELC	set	398
   352  018D                     _ANSELB	set	397
   353  018C                     _ANSELA	set	396
   354  030E                     _SLRCONC	set	782
   355  030D                     _SLRCONB	set	781
   356  030C                     _SLRCONA	set	780
   357                           
   358                           ; #config settings
   359  0000                     
   360                           	psect	cinit
   361  07FD                     start_initialization:	
   362  07FD                     __initialization:	
   363  07FD                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  07FD                     __end_of__initialization:	
   367  07FD  0020               	movlb	0
   368  07FE  3186  2EE5         	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	cstackCOMMON
   371  0070                     __pcstackCOMMON:	
   372  0070                     ?_initialize:	
   373  0070                     ??_initialize:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_reset:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_reset:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_set:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_main:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?___wmul:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ___wmul@multiplier:	
   392                           ; 2 bytes @ 0x0
   393                           
   394                           
   395                           ; 2 bytes @ 0x0
   396  0070                     	ds	2
   397  0072                     ___wmul@multiplicand:	
   398                           
   399                           ; 2 bytes @ 0x2
   400  0072                     	ds	2
   401  0074                     ??___wmul:	
   402  0074                     ___wmul@product:	
   403                           ; 1 bytes @ 0x4
   404                           
   405                           
   406                           ; 2 bytes @ 0x4
   407  0074                     	ds	2
   408  0076                     ??_set:	
   409                           
   410                           ; 1 bytes @ 0x6
   411  0076                     	ds	3
   412  0079                     set@dieValue:	
   413                           
   414                           ; 1 bytes @ 0x9
   415  0079                     	ds	1
   416  007A                     ??_main:	
   417                           
   418                           ; 1 bytes @ 0xA
   419  007A                     	ds	1
   420  007B                     main@dieValue:	
   421                           
   422                           ; 1 bytes @ 0xB
   423  007B                     	ds	1
   424                           
   425                           	psect	maintext
   426  06E5                     __pmaintext:	
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 22 in file "lab01.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  dieValue        1   11[COMMON] unsigned char 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : B1F/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels required when called:    2
   452 ;; This function calls:
   453 ;;		_initialize
   454 ;;		_reset
   455 ;;		_set
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  06E5                     _main:	
   464                           
   465                           ;lab01.c: 24: uint8_t dieValue = 1;
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   469  06E5  01FB               	clrf	main@dieValue
   470  06E6  0AFB               	incf	main@dieValue,f
   471                           
   472                           ;lab01.c: 26: initialize();
   473  06E7  3186  26B8  3186   	fcall	_initialize
   474  06EA  2EFF               	goto	l500
   475  06EB                     l502:	
   476                           
   477                           ;lab01.c: 33: if (PORTAbits.RA4 == 1){
   478  06EB  1E0C               	btfss	12,4	;volatile
   479  06EC  2EFB               	goto	l512
   480                           
   481                           ;lab01.c: 34: dieValue++;
   482  06ED  3001               	movlw	1
   483  06EE  00FA               	movwf	??_main
   484  06EF  087A               	movf	??_main,w
   485  06F0  07FB               	addwf	main@dieValue,f
   486                           
   487                           ;lab01.c: 35: reset();
   488  06F1  3186  26AF  3186   	fcall	_reset
   489                           
   490                           ;lab01.c: 36: if (dieValue == 7)
   491  06F4  3007               	movlw	7
   492  06F5  067B               	xorwf	main@dieValue,w
   493  06F6  1D03               	btfss	3,2
   494  06F7  2EFF               	goto	l500
   495                           
   496                           ;lab01.c: 37: {dieValue = 1;}
   497  06F8  01FB               	clrf	main@dieValue
   498  06F9  0AFB               	incf	main@dieValue,f
   499                           
   500                           ;lab01.c: 38: }
   501  06FA  2EFF               	goto	l500
   502  06FB                     l512:	
   503                           
   504                           ;lab01.c: 39: else{
   505                           ;lab01.c: 40: set(dieValue);
   506  06FB  087B               	movf	main@dieValue,w
   507  06FC  3187  2706  3186   	fcall	_set
   508  06FF                     l500:	
   509                           ;lab01.c: 28: while(1) {
   510                           
   511                           ;lab01.c: 41: }
   512                           ;lab01.c: 43: } else {
   513                           
   514                           
   515                           ;lab01.c: 31: if (PORTAbits.RA5 == 1) {
   516  06FF  0020               	movlb	0	; select bank0
   517  0700  1A8C               	btfsc	12,5	;volatile
   518  0701  2EEB               	goto	l502
   519                           
   520                           ;lab01.c: 45: reset();
   521  0702  3186  26AF  3186   	fcall	_reset
   522  0705  2EFF               	goto	l500
   523  0706                     __end_of_main:	
   524                           
   525                           	psect	text1
   526  0706                     __ptext1:	
   527 ;; *************** function _set *****************
   528 ;; Defined at:
   529 ;;		line 129 in file "lab01.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  dieValue        1    wreg     const unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  dieValue        1    9[COMMON] const unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   547 ;;Total ram usage:        4 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		___wmul
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _set
   559  0706                     _set:	
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   563                           ;set@dieValue stored from wreg
   564  0706  00F9               	movwf	set@dieValue
   565                           
   566                           ;lab01.c: 132: PORTCbits.RC0 = dies[dieValue-1][0];
   567  0707  0879               	movf	set@dieValue,w
   568  0708  3EFF               	addlw	255
   569  0709  00F0               	movwf	___wmul@multiplier
   570  070A  30FF               	movlw	255
   571  070B  1803               	skipnc
   572  070C  3000               	movlw	0
   573  070D  00F1               	movwf	___wmul@multiplier+1
   574  070E  3007               	movlw	7
   575  070F  00F2               	movwf	___wmul@multiplicand
   576  0710  3000               	movlw	0
   577  0711  00F3               	movwf	___wmul@multiplicand+1
   578  0712  3186  26CA  3187   	fcall	___wmul
   579  0715  0871               	movf	?___wmul+1,w
   580  0716  0085               	movwf	5
   581  0717  0870               	movf	?___wmul,w
   582  0718  0084               	movwf	4
   583  0719  3000               	movlw	low (_dies| (0+32768))
   584  071A  0784               	addwf	4,f
   585  071B  3088               	movlw	high (_dies| (0+32768))
   586  071C  3D85               	addwfc	5,f
   587  071D  0800               	movf	0,w	;code access
   588  071E  00F6               	movwf	??_set
   589  071F  0020               	movlb	0	; select bank0
   590  0720  080E               	movf	14,w	;volatile
   591  0721  0676               	xorwf	??_set,w
   592  0722  39FE               	andlw	-2
   593  0723  0676               	xorwf	??_set,w
   594  0724  008E               	movwf	14	;volatile
   595                           
   596                           ;lab01.c: 133: PORTCbits.RC1 = dies[dieValue-1][1];
   597  0725  0879               	movf	set@dieValue,w
   598  0726  3EFF               	addlw	255
   599  0727  00F0               	movwf	___wmul@multiplier
   600  0728  30FF               	movlw	255
   601  0729  1803               	skipnc
   602  072A  3000               	movlw	0
   603  072B  00F1               	movwf	___wmul@multiplier+1
   604  072C  3007               	movlw	7
   605  072D  00F2               	movwf	___wmul@multiplicand
   606  072E  3000               	movlw	0
   607  072F  00F3               	movwf	___wmul@multiplicand+1
   608  0730  3186  26CA  3187   	fcall	___wmul
   609  0733  0870               	movf	?___wmul,w
   610  0734  3E01               	addlw	1
   611  0735  00F6               	movwf	??_set
   612  0736  3000               	movlw	0
   613  0737  3D71               	addwfc	?___wmul+1,w
   614  0738  00F7               	movwf	??_set+1
   615  0739  3000               	movlw	low (_dies| (0+32768))
   616  073A  0776               	addwf	??_set,w
   617  073B  0084               	movwf	4
   618  073C  3088               	movlw	high (_dies| (0+32768))
   619  073D  3D77               	addwfc	??_set+1,w
   620  073E  0085               	movwf	5
   621  073F  0800               	movf	0,w	;code access
   622  0740  00F8               	movwf	??_set+2
   623  0741  0DF8               	rlf	??_set+2,f
   624  0742  0020               	movlb	0	; select bank0
   625  0743  080E               	movf	14,w	;volatile
   626  0744  0678               	xorwf	??_set+2,w
   627  0745  39FD               	andlw	-3
   628  0746  0678               	xorwf	??_set+2,w
   629  0747  008E               	movwf	14	;volatile
   630                           
   631                           ;lab01.c: 134: PORTCbits.RC2 = dies[dieValue-1][2];
   632  0748  0879               	movf	set@dieValue,w
   633  0749  3EFF               	addlw	255
   634  074A  00F0               	movwf	___wmul@multiplier
   635  074B  30FF               	movlw	255
   636  074C  1803               	skipnc
   637  074D  3000               	movlw	0
   638  074E  00F1               	movwf	___wmul@multiplier+1
   639  074F  3007               	movlw	7
   640  0750  00F2               	movwf	___wmul@multiplicand
   641  0751  3000               	movlw	0
   642  0752  00F3               	movwf	___wmul@multiplicand+1
   643  0753  3186  26CA  3187   	fcall	___wmul
   644  0756  0870               	movf	?___wmul,w
   645  0757  3E02               	addlw	2
   646  0758  00F6               	movwf	??_set
   647  0759  3000               	movlw	0
   648  075A  3D71               	addwfc	?___wmul+1,w
   649  075B  00F7               	movwf	??_set+1
   650  075C  3000               	movlw	low (_dies| (0+32768))
   651  075D  0776               	addwf	??_set,w
   652  075E  0084               	movwf	4
   653  075F  3088               	movlw	high (_dies| (0+32768))
   654  0760  3D77               	addwfc	??_set+1,w
   655  0761  0085               	movwf	5
   656  0762  0800               	movf	0,w	;code access
   657  0763  00F8               	movwf	??_set+2
   658  0764  0DF8               	rlf	??_set+2,f
   659  0765  0DF8               	rlf	??_set+2,f
   660  0766  0020               	movlb	0	; select bank0
   661  0767  080E               	movf	14,w	;volatile
   662  0768  0678               	xorwf	??_set+2,w
   663  0769  39FB               	andlw	-5
   664  076A  0678               	xorwf	??_set+2,w
   665  076B  008E               	movwf	14	;volatile
   666                           
   667                           ;lab01.c: 135: PORTCbits.RC3 = dies[dieValue-1][3];
   668  076C  0879               	movf	set@dieValue,w
   669  076D  3EFF               	addlw	255
   670  076E  00F0               	movwf	___wmul@multiplier
   671  076F  30FF               	movlw	255
   672  0770  1803               	skipnc
   673  0771  3000               	movlw	0
   674  0772  00F1               	movwf	___wmul@multiplier+1
   675  0773  3007               	movlw	7
   676  0774  00F2               	movwf	___wmul@multiplicand
   677  0775  3000               	movlw	0
   678  0776  00F3               	movwf	___wmul@multiplicand+1
   679  0777  3186  26CA  3187   	fcall	___wmul
   680  077A  0870               	movf	?___wmul,w
   681  077B  3E03               	addlw	3
   682  077C  00F6               	movwf	??_set
   683  077D  3000               	movlw	0
   684  077E  3D71               	addwfc	?___wmul+1,w
   685  077F  00F7               	movwf	??_set+1
   686  0780  3000               	movlw	low (_dies| (0+32768))
   687  0781  0776               	addwf	??_set,w
   688  0782  0084               	movwf	4
   689  0783  3088               	movlw	high (_dies| (0+32768))
   690  0784  3D77               	addwfc	??_set+1,w
   691  0785  0085               	movwf	5
   692  0786  0800               	movf	0,w	;code access
   693  0787  00F8               	movwf	??_set+2
   694  0788  0DF8               	rlf	??_set+2,f
   695  0789  0DF8               	rlf	??_set+2,f
   696  078A  0DF8               	rlf	??_set+2,f
   697  078B  0020               	movlb	0	; select bank0
   698  078C  080E               	movf	14,w	;volatile
   699  078D  0678               	xorwf	??_set+2,w
   700  078E  39F7               	andlw	-9
   701  078F  0678               	xorwf	??_set+2,w
   702  0790  008E               	movwf	14	;volatile
   703                           
   704                           ;lab01.c: 136: PORTCbits.RC4 = dies[dieValue-1][4];
   705  0791  0879               	movf	set@dieValue,w
   706  0792  3EFF               	addlw	255
   707  0793  00F0               	movwf	___wmul@multiplier
   708  0794  30FF               	movlw	255
   709  0795  1803               	skipnc
   710  0796  3000               	movlw	0
   711  0797  00F1               	movwf	___wmul@multiplier+1
   712  0798  3007               	movlw	7
   713  0799  00F2               	movwf	___wmul@multiplicand
   714  079A  3000               	movlw	0
   715  079B  00F3               	movwf	___wmul@multiplicand+1
   716  079C  3186  26CA  3187   	fcall	___wmul
   717  079F  0870               	movf	?___wmul,w
   718  07A0  3E04               	addlw	4
   719  07A1  00F6               	movwf	??_set
   720  07A2  3000               	movlw	0
   721  07A3  3D71               	addwfc	?___wmul+1,w
   722  07A4  00F7               	movwf	??_set+1
   723  07A5  3000               	movlw	low (_dies| (0+32768))
   724  07A6  0776               	addwf	??_set,w
   725  07A7  0084               	movwf	4
   726  07A8  3088               	movlw	high (_dies| (0+32768))
   727  07A9  3D77               	addwfc	??_set+1,w
   728  07AA  0085               	movwf	5
   729  07AB  0800               	movf	0,w	;code access
   730  07AC  00F8               	movwf	??_set+2
   731  07AD  0EF8               	swapf	??_set+2,f
   732  07AE  0020               	movlb	0	; select bank0
   733  07AF  080E               	movf	14,w	;volatile
   734  07B0  0678               	xorwf	??_set+2,w
   735  07B1  39EF               	andlw	-17
   736  07B2  0678               	xorwf	??_set+2,w
   737  07B3  008E               	movwf	14	;volatile
   738                           
   739                           ;lab01.c: 137: PORTCbits.RC5 = dies[dieValue-1][5];
   740  07B4  0879               	movf	set@dieValue,w
   741  07B5  3EFF               	addlw	255
   742  07B6  00F0               	movwf	___wmul@multiplier
   743  07B7  30FF               	movlw	255
   744  07B8  1803               	skipnc
   745  07B9  3000               	movlw	0
   746  07BA  00F1               	movwf	___wmul@multiplier+1
   747  07BB  3007               	movlw	7
   748  07BC  00F2               	movwf	___wmul@multiplicand
   749  07BD  3000               	movlw	0
   750  07BE  00F3               	movwf	___wmul@multiplicand+1
   751  07BF  3186  26CA  3187   	fcall	___wmul
   752  07C2  0870               	movf	?___wmul,w
   753  07C3  3E05               	addlw	5
   754  07C4  00F6               	movwf	??_set
   755  07C5  3000               	movlw	0
   756  07C6  3D71               	addwfc	?___wmul+1,w
   757  07C7  00F7               	movwf	??_set+1
   758  07C8  3000               	movlw	low (_dies| (0+32768))
   759  07C9  0776               	addwf	??_set,w
   760  07CA  0084               	movwf	4
   761  07CB  3088               	movlw	high (_dies| (0+32768))
   762  07CC  3D77               	addwfc	??_set+1,w
   763  07CD  0085               	movwf	5
   764  07CE  0800               	movf	0,w	;code access
   765  07CF  00F8               	movwf	??_set+2
   766  07D0  0EF8               	swapf	??_set+2,f
   767  07D1  0DF8               	rlf	??_set+2,f
   768  07D2  0020               	movlb	0	; select bank0
   769  07D3  080E               	movf	14,w	;volatile
   770  07D4  0678               	xorwf	??_set+2,w
   771  07D5  39DF               	andlw	-33
   772  07D6  0678               	xorwf	??_set+2,w
   773  07D7  008E               	movwf	14	;volatile
   774                           
   775                           ;lab01.c: 138: PORTCbits.RC6 = dies[dieValue-1][6];
   776  07D8  0879               	movf	set@dieValue,w
   777  07D9  3EFF               	addlw	255
   778  07DA  00F0               	movwf	___wmul@multiplier
   779  07DB  30FF               	movlw	255
   780  07DC  1803               	skipnc
   781  07DD  3000               	movlw	0
   782  07DE  00F1               	movwf	___wmul@multiplier+1
   783  07DF  3007               	movlw	7
   784  07E0  00F2               	movwf	___wmul@multiplicand
   785  07E1  3000               	movlw	0
   786  07E2  00F3               	movwf	___wmul@multiplicand+1
   787  07E3  3186  26CA         	fcall	___wmul
   788  07E5  0870               	movf	?___wmul,w
   789  07E6  3E06               	addlw	6
   790  07E7  00F6               	movwf	??_set
   791  07E8  3000               	movlw	0
   792  07E9  3D71               	addwfc	?___wmul+1,w
   793  07EA  00F7               	movwf	??_set+1
   794  07EB  3000               	movlw	low (_dies| (0+32768))
   795  07EC  0776               	addwf	??_set,w
   796  07ED  0084               	movwf	4
   797  07EE  3088               	movlw	high (_dies| (0+32768))
   798  07EF  3D77               	addwfc	??_set+1,w
   799  07F0  0085               	movwf	5
   800  07F1  0800               	movf	0,w	;code access
   801  07F2  00F8               	movwf	??_set+2
   802  07F3  0EF8               	swapf	??_set+2,f
   803  07F4  0DF8               	rlf	??_set+2,f
   804  07F5  0DF8               	rlf	??_set+2,f
   805  07F6  0020               	movlb	0	; select bank0
   806  07F7  080E               	movf	14,w	;volatile
   807  07F8  0678               	xorwf	??_set+2,w
   808  07F9  39BF               	andlw	-65
   809  07FA  0678               	xorwf	??_set+2,w
   810  07FB  008E               	movwf	14	;volatile
   811  07FC  0008               	return
   812  07FD                     __end_of_set:	
   813                           ;lab01.c: 139: return;
   814                           
   815                           
   816                           	psect	text2
   817  06CA                     __ptext2:	
   818 ;; *************** function ___wmul *****************
   819 ;; Defined at:
   820 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  multiplier      2    0[COMMON] unsigned int 
   823 ;;  multiplicand    2    2[COMMON] unsigned int 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  product         2    4[COMMON] unsigned int 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2    0[COMMON] unsigned int 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;Total ram usage:        6 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_set
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function ___wmul
   850  06CA                     ___wmul:	
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   854  06CA  01F4               	clrf	___wmul@product
   855  06CB  01F5               	clrf	___wmul@product+1
   856  06CC                     l480:	
   857  06CC  1C70               	btfss	___wmul@multiplier,0
   858  06CD  2ED2               	goto	l56
   859  06CE  0872               	movf	___wmul@multiplicand,w
   860  06CF  07F4               	addwf	___wmul@product,f
   861  06D0  0873               	movf	___wmul@multiplicand+1,w
   862  06D1  3DF5               	addwfc	___wmul@product+1,f
   863  06D2                     l56:	
   864  06D2  3001               	movlw	1
   865  06D3                     u95:	
   866  06D3  35F2               	lslf	___wmul@multiplicand,f
   867  06D4  0DF3               	rlf	___wmul@multiplicand+1,f
   868  06D5  0B89               	decfsz	9,f
   869  06D6  2ED3               	goto	u95
   870  06D7  3001               	movlw	1
   871  06D8                     u105:	
   872  06D8  36F1               	lsrf	___wmul@multiplier+1,f
   873  06D9  0CF0               	rrf	___wmul@multiplier,f
   874  06DA  0B89               	decfsz	9,f
   875  06DB  2ED8               	goto	u105
   876  06DC  0870               	movf	___wmul@multiplier,w
   877  06DD  0471               	iorwf	___wmul@multiplier+1,w
   878  06DE  1D03               	btfss	3,2
   879  06DF  2ECC               	goto	l480
   880  06E0  0875               	movf	___wmul@product+1,w
   881  06E1  00F1               	movwf	?___wmul+1
   882  06E2  0874               	movf	___wmul@product,w
   883  06E3  00F0               	movwf	?___wmul
   884  06E4  0008               	return
   885  06E5                     __end_of___wmul:	
   886                           
   887                           	psect	text3
   888  06B8                     __ptext3:	
   889 ;; *************** function _initialize *****************
   890 ;; Defined at:
   891 ;;		line 62 in file "lab01.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		_reset
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _initialize
   921  06B8                     _initialize:	
   922                           
   923                           ;lab01.c: 81: ANSELA = 0b00000000;
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
   927  06B8  0023               	movlb	3	; select bank3
   928  06B9  018C               	clrf	12	;volatile
   929                           
   930                           ;lab01.c: 82: ANSELB = 0b00000000;
   931  06BA  018D               	clrf	13	;volatile
   932                           
   933                           ;lab01.c: 83: ANSELC = 0b00000000;
   934  06BB  018E               	clrf	14	;volatile
   935                           
   936                           ;lab01.c: 84: SLRCONA = 0b00000000;
   937  06BC  0026               	movlb	6	; select bank6
   938  06BD  018C               	clrf	12	;volatile
   939                           
   940                           ;lab01.c: 85: SLRCONB = 0b00000000;
   941  06BE  018D               	clrf	13	;volatile
   942                           
   943                           ;lab01.c: 86: SLRCONC = 0b00000000;
   944  06BF  018E               	clrf	14	;volatile
   945                           
   946                           ;lab01.c: 87: TRISA = 0b11111111;
   947  06C0  30FF               	movlw	255
   948  06C1  0021               	movlb	1	; select bank1
   949  06C2  008C               	movwf	12	;volatile
   950                           
   951                           ;lab01.c: 88: TRISB = 0b11111111;
   952  06C3  30FF               	movlw	255
   953  06C4  008D               	movwf	13	;volatile
   954                           
   955                           ;lab01.c: 89: TRISC = 0b10000000;
   956  06C5  3080               	movlw	128
   957  06C6  008E               	movwf	14	;volatile
   958                           
   959                           ;lab01.c: 92: reset();
   960  06C7  3186  26AF         	fcall	_reset
   961  06C9  0008               	return
   962  06CA                     __end_of_initialize:	
   963                           
   964                           	psect	text4
   965  06AF                     __ptext4:	
   966 ;; *************** function _reset *****************
   967 ;; Defined at:
   968 ;;		line 102 in file "lab01.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;;		_initialize
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _reset
   998  06AF                     _reset:	
   999                           
  1000                           ;lab01.c: 104: PORTCbits.RC0 = 0;
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _reset: []
  1004  06AF  0020               	movlb	0	; select bank0
  1005  06B0  100E               	bcf	14,0	;volatile
  1006                           
  1007                           ;lab01.c: 105: PORTCbits.RC1 = 0;
  1008  06B1  108E               	bcf	14,1	;volatile
  1009                           
  1010                           ;lab01.c: 106: PORTCbits.RC2 = 0;
  1011  06B2  110E               	bcf	14,2	;volatile
  1012                           
  1013                           ;lab01.c: 107: PORTCbits.RC3 = 0;
  1014  06B3  118E               	bcf	14,3	;volatile
  1015                           
  1016                           ;lab01.c: 108: PORTCbits.RC4 = 0;
  1017  06B4  120E               	bcf	14,4	;volatile
  1018                           
  1019                           ;lab01.c: 109: PORTCbits.RC5 = 0;
  1020  06B5  128E               	bcf	14,5	;volatile
  1021                           
  1022                           ;lab01.c: 110: PORTCbits.RC6 = 0;
  1023  06B6  130E               	bcf	14,6	;volatile
  1024                           
  1025                           ;lab01.c: 111: return;
  1026  06B7  0008               	return
  1027  06B8                     __end_of_reset:	
  1028  007E                     btemp	set	126	;btemp
  1029  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    42
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set
    _set->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     895
                                             10 COMMON     2     2      0
                         _initialize
                              _reset
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  4     4      0     848
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _reset
   _reset
   _set
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 23 11:53:17 2018

            __CFG_CP$OFF 0000                       l56 06D2                       u95 06D3  
    ___wmul@multiplicand 0072              __CFG_LVP$ON 0000                      l500 06FF  
                    l502 06EB                      l512 06FB                      l480 06CC  
                    u105 06D8                      _set 0706             __CFG_BORV$LO 0000  
                    wreg 0009                     ?_set 0070             __CFG_WRT$OFF 0000  
                   _dies 0800                     _main 06E5                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 0002            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           main@dieValue 007B                    ??_set 0076                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E           __CFG_FCMEN$OFF 0000                    _reset 06AF  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_dies 082A             __end_of_main 0706  
         __CFG_LPBOR$OFF 0000                   ??_main 007A           __CFG_PLLEN$OFF 0000  
                 ?_reset 0070           __CFG_ZCDDIS$ON 0000                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E           __CFG_PWRTE$OFF 0000  
                 ___wmul 06CA           __CFG_STVREN$ON 0000  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_reset 06B8              set@dieValue 0079  
                ??_reset 0070               __pmaintext 06E5                  ?___wmul 0070  
        __CFG_PPS1WAY$ON 0000                  _SLRCONA 030C                  _SLRCONB 030D  
                _SLRCONC 030E          __size_of___wmul 001B               _initialize 06B8  
                __ptext1 0706                  __ptext2 06CA                  __ptext3 06B8  
                __ptext4 06AF             __size_of_set 00F7     end_of_initialization 07FD  
              _PORTAbits 000C                _PORTCbits 000E         __CFG_FOSC$INTOSC 0000  
         __end_of___wmul 06E5              ?_initialize 0070      start_initialization 07FD  
            __end_of_set 07FD                 ??___wmul 0074                ___latbits 0002  
    __size_of_initialize 0012           __size_of_reset 0009           ___wmul@product 0074  
      ___wmul@multiplier 0070             ??_initialize 0070            __size_of_main 0021  
     __end_of_initialize 06CA        __CFG_CLKOUTEN$OFF 0000            __pstringtext1 0800  
