

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jan 26 11:58:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1709
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1709 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011C                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0293                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029A                     	;# 
   175  029E                     	;# 
   176  030C                     	;# 
   177  030D                     	;# 
   178  030E                     	;# 
   179  038C                     	;# 
   180  038D                     	;# 
   181  038E                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0397                     	;# 
   189  0398                     	;# 
   190  0399                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0511                     	;# 
   198  0515                     	;# 
   199  0617                     	;# 
   200  0618                     	;# 
   201  0619                     	;# 
   202  0619                     	;# 
   203  061A                     	;# 
   204  061B                     	;# 
   205  061C                     	;# 
   206  061C                     	;# 
   207  0691                     	;# 
   208  0692                     	;# 
   209  0693                     	;# 
   210  0694                     	;# 
   211  0695                     	;# 
   212  0696                     	;# 
   213  0697                     	;# 
   214  0698                     	;# 
   215  0699                     	;# 
   216  069A                     	;# 
   217  069B                     	;# 
   218  069C                     	;# 
   219  069D                     	;# 
   220  069E                     	;# 
   221  069F                     	;# 
   222  0E0F                     	;# 
   223  0E10                     	;# 
   224  0E11                     	;# 
   225  0E12                     	;# 
   226  0E13                     	;# 
   227  0E14                     	;# 
   228  0E15                     	;# 
   229  0E17                     	;# 
   230  0E20                     	;# 
   231  0E21                     	;# 
   232  0E22                     	;# 
   233  0E24                     	;# 
   234  0E25                     	;# 
   235  0E28                     	;# 
   236  0E29                     	;# 
   237  0E2A                     	;# 
   238  0E2B                     	;# 
   239  0E90                     	;# 
   240  0E91                     	;# 
   241  0E92                     	;# 
   242  0E94                     	;# 
   243  0E95                     	;# 
   244  0E9C                     	;# 
   245  0E9D                     	;# 
   246  0E9E                     	;# 
   247  0E9F                     	;# 
   248  0EA0                     	;# 
   249  0EA1                     	;# 
   250  0EA2                     	;# 
   251  0EA3                     	;# 
   252  0EA4                     	;# 
   253  0EA5                     	;# 
   254  0EA6                     	;# 
   255  0EA7                     	;# 
   256  0F0F                     	;# 
   257  0F10                     	;# 
   258  0F11                     	;# 
   259  0F12                     	;# 
   260  0F13                     	;# 
   261  0F14                     	;# 
   262  0F15                     	;# 
   263  0F16                     	;# 
   264  0F17                     	;# 
   265  0F18                     	;# 
   266  0F19                     	;# 
   267  0F1A                     	;# 
   268  0F1B                     	;# 
   269  0F1C                     	;# 
   270  0F1D                     	;# 
   271  0F1E                     	;# 
   272  0F1F                     	;# 
   273  0F20                     	;# 
   274  0F21                     	;# 
   275  0F22                     	;# 
   276  0F23                     	;# 
   277  0F24                     	;# 
   278  0F25                     	;# 
   279  0F26                     	;# 
   280  0F27                     	;# 
   281  0F28                     	;# 
   282  0F29                     	;# 
   283  0F2A                     	;# 
   284  0F2B                     	;# 
   285  0F2C                     	;# 
   286  0F2D                     	;# 
   287  0F9E                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299                           
   300                           	psect	stringtext1
   301  0800                     __pstringtext1:	
   302  0800                     _dies:	
   303  0800  3400               	retlw	0
   304  0801  3400               	retlw	0
   305  0802  3400               	retlw	0
   306  0803  3401               	retlw	1
   307  0804  3400               	retlw	0
   308  0805  3400               	retlw	0
   309  0806  3400               	retlw	0
   310  0807  3400               	retlw	0
   311  0808  3400               	retlw	0
   312  0809  3401               	retlw	1
   313  080A  3401               	retlw	1
   314  080B  3400               	retlw	0
   315  080C  3401               	retlw	1
   316  080D  3400               	retlw	0
   317  080E  3400               	retlw	0
   318  080F  3400               	retlw	0
   319  0810  3401               	retlw	1
   320  0811  3401               	retlw	1
   321  0812  3401               	retlw	1
   322  0813  3400               	retlw	0
   323  0814  3400               	retlw	0
   324  0815  3401               	retlw	1
   325  0816  3400               	retlw	0
   326  0817  3401               	retlw	1
   327  0818  3400               	retlw	0
   328  0819  3401               	retlw	1
   329  081A  3400               	retlw	0
   330  081B  3401               	retlw	1
   331  081C  3401               	retlw	1
   332  081D  3400               	retlw	0
   333  081E  3401               	retlw	1
   334  081F  3401               	retlw	1
   335  0820  3401               	retlw	1
   336  0821  3400               	retlw	0
   337  0822  3401               	retlw	1
   338  0823  3401               	retlw	1
   339  0824  3401               	retlw	1
   340  0825  3401               	retlw	1
   341  0826  3400               	retlw	0
   342  0827  3401               	retlw	1
   343  0828  3401               	retlw	1
   344  0829  3401               	retlw	1
   345  082A  3400               	retlw	0
   346  082B  3400               	retlw	0
   347  082C  3400               	retlw	0
   348  082D  3401               	retlw	1
   349  082E  3401               	retlw	1
   350  082F  3401               	retlw	1
   351  0830  3401               	retlw	1
   352  0831  3400               	retlw	0
   353  0832  3400               	retlw	0
   354  0833  3400               	retlw	0
   355  0834  3400               	retlw	0
   356  0835  3400               	retlw	0
   357  0836  3400               	retlw	0
   358  0837  3400               	retlw	0
   359  0838  3400               	retlw	0
   360  0839  3400               	retlw	0
   361  083A  3400               	retlw	0
   362  083B  3401               	retlw	1
   363  083C  3401               	retlw	1
   364  083D  3400               	retlw	0
   365  083E  3400               	retlw	0
   366  083F  3400               	retlw	0
   367  0840  3400               	retlw	0
   368  0841  3401               	retlw	1
   369  0842  3401               	retlw	1
   370  0843  3400               	retlw	0
   371  0844  3400               	retlw	0
   372  0845  3400               	retlw	0
   373  0846  3401               	retlw	1
   374  0847  3401               	retlw	1
   375  0848  3400               	retlw	0
   376  0849  3400               	retlw	0
   377  084A  3400               	retlw	0
   378  084B  3400               	retlw	0
   379  084C  3400               	retlw	0
   380  084D  3400               	retlw	0
   381  084E  3401               	retlw	1
   382  084F  3401               	retlw	1
   383  0850  3400               	retlw	0
   384  0851  3400               	retlw	0
   385  0852  3400               	retlw	0
   386  0853  3401               	retlw	1
   387  0854  3401               	retlw	1
   388  0855  3400               	retlw	0
   389  0856  3400               	retlw	0
   390  0857  3400               	retlw	0
   391  0858  3400               	retlw	0
   392  0859  3401               	retlw	1
   393  085A  3401               	retlw	1
   394  085B  3400               	retlw	0
   395  085C  3401               	retlw	1
   396  085D  3401               	retlw	1
   397  085E  3400               	retlw	0
   398  085F  3400               	retlw	0
   399  0860  3400               	retlw	0
   400  0861  3400               	retlw	0
   401  0862  3400               	retlw	0
   402  0863  3401               	retlw	1
   403  0864  3401               	retlw	1
   404  0865  3401               	retlw	1
   405  0866  3400               	retlw	0
   406  0867  3400               	retlw	0
   407  0868  3400               	retlw	0
   408  0869                     __end_of_dies:	
   409  000E                     _PORTCbits	set	14
   410  000C                     _PORTAbits	set	12
   411  008E                     _TRISC	set	142
   412  008D                     _TRISB	set	141
   413  008C                     _TRISA	set	140
   414  0099                     _OSCCONbits	set	153
   415  018E                     _ANSELC	set	398
   416  018D                     _ANSELB	set	397
   417  018C                     _ANSELA	set	396
   418  030E                     _SLRCONC	set	782
   419  030D                     _SLRCONB	set	781
   420  030C                     _SLRCONA	set	780
   421                           
   422                           ; #config settings
   423  0000                     
   424                           	psect	cinit
   425  07FD                     start_initialization:	
   426  07FD                     __initialization:	
   427  07FD                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430  07FD                     __end_of__initialization:	
   431  07FD  0020               	movlb	0
   432  07FE  3186  2ED3         	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:	
   436  0070                     ?_initialize:	
   437  0070                     ?_reset:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_set:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?___wmul:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ___wmul@multiplier:	
   450                           ; 2 bytes @ 0x0
   451                           
   452                           
   453                           ; 2 bytes @ 0x0
   454  0070                     	ds	2
   455  0072                     ___wmul@multiplicand:	
   456                           
   457                           ; 2 bytes @ 0x2
   458  0072                     	ds	2
   459  0074                     ??___wmul:	
   460  0074                     ___wmul@product:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465  0074                     	ds	2
   466  0076                     ??_set:	
   467                           
   468                           ; 1 bytes @ 0x6
   469  0076                     	ds	3
   470  0079                     set@dieValue:	
   471                           
   472                           ; 1 bytes @ 0x9
   473  0079                     	ds	1
   474  007A                     ??_initialize:	
   475  007A                     ??_reset:	
   476                           ; 1 bytes @ 0xA
   477                           
   478  007A                     ??_main:	
   479                           ; 1 bytes @ 0xA
   480                           
   481                           
   482                           ; 1 bytes @ 0xA
   483  007A                     	ds	1
   484  007B                     main@dieValue:	
   485                           
   486                           ; 1 bytes @ 0xB
   487  007B                     	ds	1
   488                           
   489                           	psect	maintext
   490  06D3                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 25 in file "lab02.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  dieValue        1   11[COMMON] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B1F/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    4
   516 ;; This function calls:
   517 ;;		_initialize
   518 ;;		_reset
   519 ;;		_set
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  06D3                     _main:	
   528                           
   529                           ;lab02.c: 27: uint8_t dieValue = 1;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   533  06D3  01FB               	clrf	main@dieValue
   534  06D4  0AFB               	incf	main@dieValue,f
   535                           
   536                           ;lab02.c: 29: initialize();
   537  06D5  3186  269E  3186   	fcall	_initialize
   538  06D8  2EFC               	goto	l562
   539  06D9                     l564:	
   540                           
   541                           ;lab02.c: 36: if (PORTAbits.RA4 == 1){
   542  06D9  1E0C               	btfss	12,4	;volatile
   543  06DA  2EEA               	goto	l578
   544                           
   545                           ;lab02.c: 37: if (dieValue == 7)
   546  06DB  3007               	movlw	7
   547  06DC  067B               	xorwf	main@dieValue,w
   548  06DD  1D03               	btfss	3,2
   549  06DE  2EE1               	goto	l570
   550                           
   551                           ;lab02.c: 38: {dieValue = 1;}
   552  06DF  01FB               	clrf	main@dieValue
   553  06E0  0AFB               	incf	main@dieValue,f
   554  06E1                     l570:	
   555                           
   556                           ;lab02.c: 40: dieValue++;
   557  06E1  3001               	movlw	1
   558  06E2  00FA               	movwf	??_main
   559  06E3  087A               	movf	??_main,w
   560  06E4  07FB               	addwf	main@dieValue,f
   561                           
   562                           ;lab02.c: 41: reset();
   563  06E5  3186  269A  3186   	fcall	_reset
   564                           
   565                           ;lab02.c: 43: if (dieValue == 7)
   566  06E8  3007               	movlw	7
   567  06E9  2EF7               	goto	L1
   568  06EA                     l578:	
   569                           ;lab02.c: 45: }
   570                           
   571                           ;lab02.c: 44: {dieValue = 1;}
   572                           
   573                           
   574                           ;lab02.c: 46: else{
   575                           ;lab02.c: 47: set(dieValue);
   576  06EA  087B               	movf	main@dieValue,w
   577  06EB  3187  2706  3186   	fcall	_set
   578                           
   579                           ;lab02.c: 48: }
   580                           ;lab02.c: 50: } else {
   581  06EE  2EFC               	goto	l562
   582  06EF                     l580:	
   583                           
   584                           ;lab02.c: 52: {
   585                           ;lab02.c: 53: dieValue++;
   586  06EF  3001               	movlw	1
   587  06F0  00FA               	movwf	??_main
   588  06F1  087A               	movf	??_main,w
   589  06F2  07FB               	addwf	main@dieValue,f
   590                           
   591                           ;lab02.c: 54: reset();
   592  06F3  3186  269A  3186   	fcall	_reset
   593                           
   594                           ;lab02.c: 56: if (dieValue == 16)
   595  06F6  3010               	movlw	16
   596  06F7                     L1:	
   597  06F7  067B               	xorwf	main@dieValue,w
   598  06F8  1D03               	btfss	3,2
   599  06F9  2EFC               	goto	l562
   600                           
   601                           ;lab02.c: 57: {dieValue = 1;}
   602  06FA  01FB               	clrf	main@dieValue
   603  06FB  0AFB               	incf	main@dieValue,f
   604  06FC                     l562:	
   605                           ;lab02.c: 31: while(1) {
   606                           
   607                           ;lab02.c: 58: }
   608                           
   609                           
   610                           ;lab02.c: 34: if (PORTAbits.RA5 == 1) {
   611  06FC  0020               	movlb	0	; select bank0
   612  06FD  1A8C               	btfsc	12,5	;volatile
   613  06FE  2ED9               	goto	l564
   614                           
   615                           ;lab02.c: 51: if (PORTAbits.RA4 == 1)
   616  06FF  1A0C               	btfsc	12,4	;volatile
   617  0700  2EEF               	goto	l580
   618                           
   619                           ;lab02.c: 59: else{
   620                           ;lab02.c: 60: set(dieValue);
   621  0701  087B               	movf	main@dieValue,w
   622  0702  3187  2706  3186   	fcall	_set
   623  0705  2EFC               	goto	l562
   624  0706                     __end_of_main:	
   625                           
   626                           	psect	text1
   627  069E                     __ptext1:	
   628 ;; *************** function _initialize *****************
   629 ;; Defined at:
   630 ;;		line 78 in file "lab02.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    3
   651 ;; This function calls:
   652 ;;		_reset
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _initialize
   660  069E                     _initialize:	
   661                           
   662                           ;lab02.c: 81: OSCCONbits.IRCF = 14;
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   666  069E  0021               	movlb	1	; select bank1
   667  069F  0819               	movf	25,w	;volatile
   668  06A0  3987               	andlw	-121
   669  06A1  3870               	iorlw	112
   670  06A2  0099               	movwf	25	;volatile
   671                           
   672                           ;lab02.c: 82: OSCCONbits.SPLLEN = 1;
   673  06A3  1799               	bsf	25,7	;volatile
   674                           
   675                           ;lab02.c: 83: OSCCONbits.SCS = 0;
   676  06A4  30FC               	movlw	-4
   677  06A5  0599               	andwf	25,f	;volatile
   678                           
   679                           ;lab02.c: 96: ANSELA = 0b00000000;
   680  06A6  0023               	movlb	3	; select bank3
   681  06A7  018C               	clrf	12	;volatile
   682                           
   683                           ;lab02.c: 97: ANSELB = 0b00000000;
   684  06A8  018D               	clrf	13	;volatile
   685                           
   686                           ;lab02.c: 98: ANSELC = 0b00000000;
   687  06A9  018E               	clrf	14	;volatile
   688                           
   689                           ;lab02.c: 99: SLRCONA = 0b00000000;
   690  06AA  0026               	movlb	6	; select bank6
   691  06AB  018C               	clrf	12	;volatile
   692                           
   693                           ;lab02.c: 100: SLRCONB = 0b00000000;
   694  06AC  018D               	clrf	13	;volatile
   695                           
   696                           ;lab02.c: 101: SLRCONC = 0b00000000;
   697  06AD  018E               	clrf	14	;volatile
   698                           
   699                           ;lab02.c: 102: TRISA = 0b11111111;
   700  06AE  30FF               	movlw	255
   701  06AF  0021               	movlb	1	; select bank1
   702  06B0  008C               	movwf	12	;volatile
   703                           
   704                           ;lab02.c: 103: TRISB = 0b11111111;
   705  06B1  30FF               	movlw	255
   706  06B2  008D               	movwf	13	;volatile
   707                           
   708                           ;lab02.c: 104: TRISC = 0b10000000;
   709  06B3  3080               	movlw	128
   710  06B4  008E               	movwf	14	;volatile
   711                           
   712                           ;lab02.c: 107: reset();
   713  06B5  3186  269A         	fcall	_reset
   714  06B7  0008               	return
   715  06B8                     __end_of_initialize:	
   716                           
   717                           	psect	text2
   718  069A                     __ptext2:	
   719 ;; *************** function _reset *****************
   720 ;; Defined at:
   721 ;;		line 117 in file "lab02.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    2
   742 ;; This function calls:
   743 ;;		_set
   744 ;; This function is called by:
   745 ;;		_main
   746 ;;		_initialize
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _reset
   752  069A                     _reset:	
   753                           
   754                           ;lab02.c: 119: set(8);
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   758  069A  3008               	movlw	8
   759  069B  3187  2706         	fcall	_set
   760  069D  0008               	return
   761  069E                     __end_of_reset:	
   762                           ;lab02.c: 120: return;
   763                           
   764                           
   765                           	psect	text3
   766  0706                     __ptext3:	
   767 ;; *************** function _set *****************
   768 ;; Defined at:
   769 ;;		line 148 in file "lab02.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  dieValue        1    wreg     const unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  dieValue        1    9[COMMON] const unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   787 ;;Total ram usage:        4 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		___wmul
   792 ;; This function is called by:
   793 ;;		_main
   794 ;;		_reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _set
   800  0706                     _set:	
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   804                           ;set@dieValue stored from wreg
   805  0706  00F9               	movwf	set@dieValue
   806                           
   807                           ;lab02.c: 151: PORTCbits.RC0 = dies[dieValue-1][0];
   808  0707  0879               	movf	set@dieValue,w
   809  0708  3EFF               	addlw	255
   810  0709  00F0               	movwf	___wmul@multiplier
   811  070A  30FF               	movlw	255
   812  070B  1803               	skipnc
   813  070C  3000               	movlw	0
   814  070D  00F1               	movwf	___wmul@multiplier+1
   815  070E  3007               	movlw	7
   816  070F  00F2               	movwf	___wmul@multiplicand
   817  0710  3000               	movlw	0
   818  0711  00F3               	movwf	___wmul@multiplicand+1
   819  0712  3186  26B8  3187   	fcall	___wmul
   820  0715  0871               	movf	?___wmul+1,w
   821  0716  0085               	movwf	5
   822  0717  0870               	movf	?___wmul,w
   823  0718  0084               	movwf	4
   824  0719  3000               	movlw	low (_dies| (0+32768))
   825  071A  0784               	addwf	4,f
   826  071B  3088               	movlw	high (_dies| (0+32768))
   827  071C  3D85               	addwfc	5,f
   828  071D  0800               	movf	0,w	;code access
   829  071E  00F6               	movwf	??_set
   830  071F  0020               	movlb	0	; select bank0
   831  0720  080E               	movf	14,w	;volatile
   832  0721  0676               	xorwf	??_set,w
   833  0722  39FE               	andlw	-2
   834  0723  0676               	xorwf	??_set,w
   835  0724  008E               	movwf	14	;volatile
   836                           
   837                           ;lab02.c: 152: PORTCbits.RC1 = dies[dieValue-1][1];
   838  0725  0879               	movf	set@dieValue,w
   839  0726  3EFF               	addlw	255
   840  0727  00F0               	movwf	___wmul@multiplier
   841  0728  30FF               	movlw	255
   842  0729  1803               	skipnc
   843  072A  3000               	movlw	0
   844  072B  00F1               	movwf	___wmul@multiplier+1
   845  072C  3007               	movlw	7
   846  072D  00F2               	movwf	___wmul@multiplicand
   847  072E  3000               	movlw	0
   848  072F  00F3               	movwf	___wmul@multiplicand+1
   849  0730  3186  26B8  3187   	fcall	___wmul
   850  0733  0870               	movf	?___wmul,w
   851  0734  3E01               	addlw	1
   852  0735  00F6               	movwf	??_set
   853  0736  3000               	movlw	0
   854  0737  3D71               	addwfc	?___wmul+1,w
   855  0738  00F7               	movwf	??_set+1
   856  0739  3000               	movlw	low (_dies| (0+32768))
   857  073A  0776               	addwf	??_set,w
   858  073B  0084               	movwf	4
   859  073C  3088               	movlw	high (_dies| (0+32768))
   860  073D  3D77               	addwfc	??_set+1,w
   861  073E  0085               	movwf	5
   862  073F  0800               	movf	0,w	;code access
   863  0740  00F8               	movwf	??_set+2
   864  0741  0DF8               	rlf	??_set+2,f
   865  0742  0020               	movlb	0	; select bank0
   866  0743  080E               	movf	14,w	;volatile
   867  0744  0678               	xorwf	??_set+2,w
   868  0745  39FD               	andlw	-3
   869  0746  0678               	xorwf	??_set+2,w
   870  0747  008E               	movwf	14	;volatile
   871                           
   872                           ;lab02.c: 153: PORTCbits.RC2 = dies[dieValue-1][2];
   873  0748  0879               	movf	set@dieValue,w
   874  0749  3EFF               	addlw	255
   875  074A  00F0               	movwf	___wmul@multiplier
   876  074B  30FF               	movlw	255
   877  074C  1803               	skipnc
   878  074D  3000               	movlw	0
   879  074E  00F1               	movwf	___wmul@multiplier+1
   880  074F  3007               	movlw	7
   881  0750  00F2               	movwf	___wmul@multiplicand
   882  0751  3000               	movlw	0
   883  0752  00F3               	movwf	___wmul@multiplicand+1
   884  0753  3186  26B8  3187   	fcall	___wmul
   885  0756  0870               	movf	?___wmul,w
   886  0757  3E02               	addlw	2
   887  0758  00F6               	movwf	??_set
   888  0759  3000               	movlw	0
   889  075A  3D71               	addwfc	?___wmul+1,w
   890  075B  00F7               	movwf	??_set+1
   891  075C  3000               	movlw	low (_dies| (0+32768))
   892  075D  0776               	addwf	??_set,w
   893  075E  0084               	movwf	4
   894  075F  3088               	movlw	high (_dies| (0+32768))
   895  0760  3D77               	addwfc	??_set+1,w
   896  0761  0085               	movwf	5
   897  0762  0800               	movf	0,w	;code access
   898  0763  00F8               	movwf	??_set+2
   899  0764  0DF8               	rlf	??_set+2,f
   900  0765  0DF8               	rlf	??_set+2,f
   901  0766  0020               	movlb	0	; select bank0
   902  0767  080E               	movf	14,w	;volatile
   903  0768  0678               	xorwf	??_set+2,w
   904  0769  39FB               	andlw	-5
   905  076A  0678               	xorwf	??_set+2,w
   906  076B  008E               	movwf	14	;volatile
   907                           
   908                           ;lab02.c: 154: PORTCbits.RC3 = dies[dieValue-1][3];
   909  076C  0879               	movf	set@dieValue,w
   910  076D  3EFF               	addlw	255
   911  076E  00F0               	movwf	___wmul@multiplier
   912  076F  30FF               	movlw	255
   913  0770  1803               	skipnc
   914  0771  3000               	movlw	0
   915  0772  00F1               	movwf	___wmul@multiplier+1
   916  0773  3007               	movlw	7
   917  0774  00F2               	movwf	___wmul@multiplicand
   918  0775  3000               	movlw	0
   919  0776  00F3               	movwf	___wmul@multiplicand+1
   920  0777  3186  26B8  3187   	fcall	___wmul
   921  077A  0870               	movf	?___wmul,w
   922  077B  3E03               	addlw	3
   923  077C  00F6               	movwf	??_set
   924  077D  3000               	movlw	0
   925  077E  3D71               	addwfc	?___wmul+1,w
   926  077F  00F7               	movwf	??_set+1
   927  0780  3000               	movlw	low (_dies| (0+32768))
   928  0781  0776               	addwf	??_set,w
   929  0782  0084               	movwf	4
   930  0783  3088               	movlw	high (_dies| (0+32768))
   931  0784  3D77               	addwfc	??_set+1,w
   932  0785  0085               	movwf	5
   933  0786  0800               	movf	0,w	;code access
   934  0787  00F8               	movwf	??_set+2
   935  0788  0DF8               	rlf	??_set+2,f
   936  0789  0DF8               	rlf	??_set+2,f
   937  078A  0DF8               	rlf	??_set+2,f
   938  078B  0020               	movlb	0	; select bank0
   939  078C  080E               	movf	14,w	;volatile
   940  078D  0678               	xorwf	??_set+2,w
   941  078E  39F7               	andlw	-9
   942  078F  0678               	xorwf	??_set+2,w
   943  0790  008E               	movwf	14	;volatile
   944                           
   945                           ;lab02.c: 155: PORTCbits.RC4 = dies[dieValue-1][4];
   946  0791  0879               	movf	set@dieValue,w
   947  0792  3EFF               	addlw	255
   948  0793  00F0               	movwf	___wmul@multiplier
   949  0794  30FF               	movlw	255
   950  0795  1803               	skipnc
   951  0796  3000               	movlw	0
   952  0797  00F1               	movwf	___wmul@multiplier+1
   953  0798  3007               	movlw	7
   954  0799  00F2               	movwf	___wmul@multiplicand
   955  079A  3000               	movlw	0
   956  079B  00F3               	movwf	___wmul@multiplicand+1
   957  079C  3186  26B8  3187   	fcall	___wmul
   958  079F  0870               	movf	?___wmul,w
   959  07A0  3E04               	addlw	4
   960  07A1  00F6               	movwf	??_set
   961  07A2  3000               	movlw	0
   962  07A3  3D71               	addwfc	?___wmul+1,w
   963  07A4  00F7               	movwf	??_set+1
   964  07A5  3000               	movlw	low (_dies| (0+32768))
   965  07A6  0776               	addwf	??_set,w
   966  07A7  0084               	movwf	4
   967  07A8  3088               	movlw	high (_dies| (0+32768))
   968  07A9  3D77               	addwfc	??_set+1,w
   969  07AA  0085               	movwf	5
   970  07AB  0800               	movf	0,w	;code access
   971  07AC  00F8               	movwf	??_set+2
   972  07AD  0EF8               	swapf	??_set+2,f
   973  07AE  0020               	movlb	0	; select bank0
   974  07AF  080E               	movf	14,w	;volatile
   975  07B0  0678               	xorwf	??_set+2,w
   976  07B1  39EF               	andlw	-17
   977  07B2  0678               	xorwf	??_set+2,w
   978  07B3  008E               	movwf	14	;volatile
   979                           
   980                           ;lab02.c: 156: PORTCbits.RC5 = dies[dieValue-1][5];
   981  07B4  0879               	movf	set@dieValue,w
   982  07B5  3EFF               	addlw	255
   983  07B6  00F0               	movwf	___wmul@multiplier
   984  07B7  30FF               	movlw	255
   985  07B8  1803               	skipnc
   986  07B9  3000               	movlw	0
   987  07BA  00F1               	movwf	___wmul@multiplier+1
   988  07BB  3007               	movlw	7
   989  07BC  00F2               	movwf	___wmul@multiplicand
   990  07BD  3000               	movlw	0
   991  07BE  00F3               	movwf	___wmul@multiplicand+1
   992  07BF  3186  26B8  3187   	fcall	___wmul
   993  07C2  0870               	movf	?___wmul,w
   994  07C3  3E05               	addlw	5
   995  07C4  00F6               	movwf	??_set
   996  07C5  3000               	movlw	0
   997  07C6  3D71               	addwfc	?___wmul+1,w
   998  07C7  00F7               	movwf	??_set+1
   999  07C8  3000               	movlw	low (_dies| (0+32768))
  1000  07C9  0776               	addwf	??_set,w
  1001  07CA  0084               	movwf	4
  1002  07CB  3088               	movlw	high (_dies| (0+32768))
  1003  07CC  3D77               	addwfc	??_set+1,w
  1004  07CD  0085               	movwf	5
  1005  07CE  0800               	movf	0,w	;code access
  1006  07CF  00F8               	movwf	??_set+2
  1007  07D0  0EF8               	swapf	??_set+2,f
  1008  07D1  0DF8               	rlf	??_set+2,f
  1009  07D2  0020               	movlb	0	; select bank0
  1010  07D3  080E               	movf	14,w	;volatile
  1011  07D4  0678               	xorwf	??_set+2,w
  1012  07D5  39DF               	andlw	-33
  1013  07D6  0678               	xorwf	??_set+2,w
  1014  07D7  008E               	movwf	14	;volatile
  1015                           
  1016                           ;lab02.c: 157: PORTCbits.RC6 = dies[dieValue-1][6];
  1017  07D8  0879               	movf	set@dieValue,w
  1018  07D9  3EFF               	addlw	255
  1019  07DA  00F0               	movwf	___wmul@multiplier
  1020  07DB  30FF               	movlw	255
  1021  07DC  1803               	skipnc
  1022  07DD  3000               	movlw	0
  1023  07DE  00F1               	movwf	___wmul@multiplier+1
  1024  07DF  3007               	movlw	7
  1025  07E0  00F2               	movwf	___wmul@multiplicand
  1026  07E1  3000               	movlw	0
  1027  07E2  00F3               	movwf	___wmul@multiplicand+1
  1028  07E3  3186  26B8         	fcall	___wmul
  1029  07E5  0870               	movf	?___wmul,w
  1030  07E6  3E06               	addlw	6
  1031  07E7  00F6               	movwf	??_set
  1032  07E8  3000               	movlw	0
  1033  07E9  3D71               	addwfc	?___wmul+1,w
  1034  07EA  00F7               	movwf	??_set+1
  1035  07EB  3000               	movlw	low (_dies| (0+32768))
  1036  07EC  0776               	addwf	??_set,w
  1037  07ED  0084               	movwf	4
  1038  07EE  3088               	movlw	high (_dies| (0+32768))
  1039  07EF  3D77               	addwfc	??_set+1,w
  1040  07F0  0085               	movwf	5
  1041  07F1  0800               	movf	0,w	;code access
  1042  07F2  00F8               	movwf	??_set+2
  1043  07F3  0EF8               	swapf	??_set+2,f
  1044  07F4  0DF8               	rlf	??_set+2,f
  1045  07F5  0DF8               	rlf	??_set+2,f
  1046  07F6  0020               	movlb	0	; select bank0
  1047  07F7  080E               	movf	14,w	;volatile
  1048  07F8  0678               	xorwf	??_set+2,w
  1049  07F9  39BF               	andlw	-65
  1050  07FA  0678               	xorwf	??_set+2,w
  1051  07FB  008E               	movwf	14	;volatile
  1052  07FC  0008               	return
  1053  07FD                     __end_of_set:	
  1054                           ;lab02.c: 158: return;
  1055                           
  1056                           
  1057                           	psect	text4
  1058  06B8                     __ptext4:	
  1059 ;; *************** function ___wmul *****************
  1060 ;; Defined at:
  1061 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  multiplier      2    0[COMMON] unsigned int 
  1064 ;;  multiplicand    2    2[COMMON] unsigned int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  product         2    4[COMMON] unsigned int 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2    0[COMMON] unsigned int 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1080 ;;Total ram usage:        6 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_set
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function ___wmul
  1091  06B8                     ___wmul:	
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1095  06B8  01F4               	clrf	___wmul@product
  1096  06B9  01F5               	clrf	___wmul@product+1
  1097  06BA                     l514:	
  1098  06BA  1C70               	btfss	___wmul@multiplier,0
  1099  06BB  2EC0               	goto	l62
  1100  06BC  0872               	movf	___wmul@multiplicand,w
  1101  06BD  07F4               	addwf	___wmul@product,f
  1102  06BE  0873               	movf	___wmul@multiplicand+1,w
  1103  06BF  3DF5               	addwfc	___wmul@product+1,f
  1104  06C0                     l62:	
  1105  06C0  3001               	movlw	1
  1106  06C1                     u125:	
  1107  06C1  35F2               	lslf	___wmul@multiplicand,f
  1108  06C2  0DF3               	rlf	___wmul@multiplicand+1,f
  1109  06C3  0B89               	decfsz	9,f
  1110  06C4  2EC1               	goto	u125
  1111  06C5  3001               	movlw	1
  1112  06C6                     u135:	
  1113  06C6  36F1               	lsrf	___wmul@multiplier+1,f
  1114  06C7  0CF0               	rrf	___wmul@multiplier,f
  1115  06C8  0B89               	decfsz	9,f
  1116  06C9  2EC6               	goto	u135
  1117  06CA  0870               	movf	___wmul@multiplier,w
  1118  06CB  0471               	iorwf	___wmul@multiplier+1,w
  1119  06CC  1D03               	btfss	3,2
  1120  06CD  2EBA               	goto	l514
  1121  06CE  0875               	movf	___wmul@product+1,w
  1122  06CF  00F1               	movwf	?___wmul+1
  1123  06D0  0874               	movf	___wmul@product,w
  1124  06D1  00F0               	movwf	?___wmul
  1125  06D2  0008               	return
  1126  06D3                     __end_of___wmul:	
  1127  007E                     btemp	set	126	;btemp
  1128  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    105
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set
    _reset->_set
    _set->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2660
                                             10 COMMON     2     2      0
                         _initialize
                              _reset
                                _set
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     848
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0     848
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  4     4      0     848
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _reset
       _set
         ___wmul
   _reset
     _set
       ___wmul
   _set
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jan 26 11:58:45 2018

            __CFG_CP$OFF 0000                       l62 06C0      ___wmul@multiplicand 0072  
            __CFG_LVP$ON 0000                      l514 06BA                      l570 06E1  
                    l562 06FC                      l580 06EF                      l564 06D9  
                    l578 06EA                      u125 06C1                      u135 06C6  
                    _set 0706             __CFG_BORV$LO 0000                      wreg 0009  
                   ?_set 0070             __CFG_WRT$OFF 0000                     _dies 0800  
                   _main 06D3                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 0002  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             main@dieValue 007B  
                  ??_set 0076                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
         __CFG_FCMEN$OFF 0000                    _reset 069A           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_dies 0869             __end_of_main 0706           __CFG_LPBOR$OFF 0000  
                 ??_main 007A           __CFG_PLLEN$OFF 0000                   ?_reset 0070  
         __CFG_ZCDDIS$ON 0000                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E           __CFG_PWRTE$OFF 0000                   ___wmul 06B8  
         __CFG_STVREN$ON 0000  __end_of__initialization 07FD           __pcstackCOMMON 0070  
          __end_of_reset 069E              set@dieValue 0079                  ??_reset 007A  
             __pmaintext 06D3                  ?___wmul 0070          __CFG_PPS1WAY$ON 0000  
                _SLRCONA 030C                  _SLRCONB 030D                  _SLRCONC 030E  
        __size_of___wmul 001B               _initialize 069E                  __ptext1 069E  
                __ptext2 069A                  __ptext3 0706                  __ptext4 06B8  
           __size_of_set 00F7     end_of_initialization 07FD                _PORTAbits 000C  
              _PORTCbits 000E         __CFG_FOSC$INTOSC 0000           __end_of___wmul 06D3  
            ?_initialize 0070      start_initialization 07FD              __end_of_set 07FD  
               ??___wmul 0074                ___latbits 0002      __size_of_initialize 001A  
         __size_of_reset 0004           ___wmul@product 0074        ___wmul@multiplier 0070  
           ??_initialize 007A            __size_of_main 0033       __end_of_initialize 06B8  
      __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099            __pstringtext1 0800  
